from scryptos.crypto.attack import knapsackutil
import unittest


class TestKnapsack(unittest.TestCase):
    def setUp(s):
        pass

    def test_knapsack(s):
        from scryptos.wrapper.common import check

        if check("gp") or check("fplll") or check("gap"):
            m = 0x341CCF41E09DA851
            c = 0xB75B63369A52F5F30CFE5E642
            a = [
                58692287682224938532079129932,
                54124250491778978820692485381,
                7277220015820983195773562608,
                22332383050669823978020089761,
                16967063558604003742849514894,
                62355997480269765615210626760,
                5170363880013545458168089364,
                14258428081357094750634713280,
                36287775811261632958539463292,
                64158589039078535932527740088,
                4957165945420369897339450045,
                48887024134310311336003185458,
                18793329531325217943998377262,
                34849054916999515597115226753,
                34004947907188645530085195162,
                34292499970059354752786233092,
                7465958787690007484635596453,
                54523540218652065182276201159,
                57000747039828947704764319534,
                50575388677892232980068371694,
                3702058161015823872166782237,
                3349829679265481129755048986,
                28405544429942218214723074100,
                36495788164044649888936432337,
                48544464129042978733031529923,
                60050271447609162325797432216,
                17009291688635671258136540844,
                32243452400131210275321820528,
                19435400185697379146087163973,
                18958695960561396891652356392,
                31046838278903521493393091567,
                22039804766852830688395024152,
                57057512556148595984239556858,
                60234203621762490899836532853,
                17520024899042505063126260369,
                47991875009003147708419421093,
                2490616484966554508753587547,
                2899153068397613767531906868,
                52497993703425658528041503014,
                52472487311532478269420426577,
                40482174126297668775911754500,
                16911496622935987625595000117,
                46693438934980177103776837991,
                1284890835773525386783112485,
                54477823291266207382876225082,
                61740894964814382664396357499,
                46647309100226523278177395127,
                16502561642567509404189158915,
                19004498941637468189390997034,
                9828916790346848731369187336,
                35425036974884801641584840823,
                31415726379765125631239673685,
                17972704773815859985638190557,
                9936946611209044418233820319,
                36798963351701498896151091569,
                13848431692126270671326713024,
                3198504385930460160976160781,
                16499536430449755854269030517,
                57509243300349206773820711938,
                43866494813937969559452082306,
                54036517188127062281695050584,
                27536442945835183874395339046,
                27752811040789181632791691991,
                55343638437809942929901949018,
            ]
            s.assertEqual(knapsackutil.merkle_hellman_low_density_CLOS(c, a), m)
            s.assertEqual(knapsackutil.merkle_hellman_low_density_LO(c, a), m)
            s.assertEqual(
                knapsackutil.merkle_hellman_modulo(
                    14487, [12084, 18033, 12345, 13333, 10058], 20000
                ),
                [1, 0, 1, 0, 1],
            )
